#input: Input FASTQ file(s) 

#output: output directory with the name of the first FASTQ file containing tsv file, HDF5 binary file, json file containing information on run

#goal: creates a directory with the name given from the first argument and runs the kallisto quantification algorithm based on the transcriptome index generated by kallisto on SE/PE FASTQ files. The -b option is the number of bootstrap sampling, the -l option is the estimated average fragment length, the -s is option is the estimated STD of fragment length, the -t is the number of threads to use, and --pseudobam saves the pseudoalignments to transcriptome ot BAM file.
 
#The transcriptome.idx generated from kallisto index is hardcoded into the script with /data/internal/Biocore/zebrafish_dev/transcriptome.idx

mkdir ${1}_kallisto

case $# in
  1)
    kallisto quant -i /data/internal/Biocore/zebrafish_dev/transcriptome.idx -o ${1}_kallisto -b 100 --single -l 190 -s 20 -t 2 --pseudobam $1
    echo "single end kallisto_quant"
    ;;
  2)
    kallisto quant -i /data/internal/Biocore/zebrafish_dev/transcriptome.idx -o ${1}_kallisto -b 100 --pseudobam -t 2 $1 $2
    echo "paired end kallisto_quant"
    ;;
esac







